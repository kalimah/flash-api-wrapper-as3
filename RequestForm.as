/** This class allows you to send a catalog or newsletter request to campaign monitor. Example of use below:* * NOTE: The form may have up to 13 fields. However, the names of the fields in flash must match the name of the custom fields you make on campaign monitor!!! 	Make sure you have a submit button (submitBtn) as well as a message textfield (msg), in order to display to the user if the request was successful		var maverikCatalogRequest;	submitBtn.addEventListener(MouseEvent.CLICK, submit);		function submit(e:MouseEvent):void {		if (email.text !== "" &&			firstName.text !== "" &&			lastName.text !== "" &&			address1.text !== "" &&			address2.text !== "" &&			city.text !== "" &&			state.text !== "" &&			zip.text !== "" &&			phone.text !== "" &&			age.text !== "" &&			position.text !== "" &&			coach.text !== "") {				msg.text = "Processing...";				// pass in the text field names to RequestForm()				maverikCatalogRequest = new RequestForm("418549", firstName, lastName, email, address1, address2, city, state, zip, phone, age, position, coach);				maverikCatalogRequest.addEventListener(RequestForm.ON_FINISHED, getResponse);		} else {			msg.text = "Please fill out all fields";		}	};		function getResponse(e:Event):void {		msg.text = maverikCatalogRequest.result;	}** Created By: Ben Vogelzang* © Ben Vogelzang 2008**/package com.benvogelzang.as3 {		import flash.events.*;	import flash.net.*;		public class RequestForm extends EventDispatcher {						public static const ON_FINISHED = "OnFinished";		private var urlLoader:URLLoader;		private var _response:String;				/*		* @param listId - the campaign monitor list id number		* @param firstName - the first name text field of the participant		* @param lastName - the last name text field of the participant		* @param optionalFields - the rest of the fields that you need for campaign monitor.		* NOTE: These must have the same name as optional fields on campaign monitor.		*		*/		public function RequestForm(listId, firstName, lastName, email, ... optionalFields) {				//add your Campaign Monitor ApiID				var myApiId = "";				//add your Campaign Monitor List ID				var myListId = "";						var mySoapCall = "<?xml version=\"1.0\" encoding=\"utf-8\"?><soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\"><soap:Body><Subscriber.AddWithCustomFields xmlns=\"http://api.createsend.com/api/\">";				mySoapCall += "<ApiKey>" + myApiId + "</ApiKey>";				mySoapCall += "<ListID>" + myListId + "</ListID>";				mySoapCall += "<Email>" + email.text + "</Email>";				mySoapCall += "<Name>" + firstName.text + " " + lastName.text + "</Name>";				mySoapCall += "<CustomFields>";				for (var i=0; i < optionalFields.length; i++) {					mySoapCall += "<SubscriberCustomField><Key>[" + optionalFields[i].name + "]</Key><Value>" + optionalFields[i].text + "</Value></SubscriberCustomField>"					}				mySoapCall += "</CustomFields>";								mySoapCall += "</Subscriber.AddWithCustomFields></soap:Body></soap:Envelope>";						var contactSendXML = new XML (mySoapCall);				var urlRequest:URLRequest = new URLRequest("http://api.createsend.com/api/api.asmx");				urlRequest.method = URLRequestMethod.POST;				urlRequest.requestHeaders.push(new URLRequestHeader("Content-Type","text/xml; charset=utf-8"));				urlRequest.requestHeaders.push(new URLRequestHeader("SOAPAction","http://api.createsend.com/api/Subscriber.AddWithCustomFields"));				urlRequest.data = contactSendXML;								urlLoader = new URLLoader();				urlLoader.dataFormat = URLLoaderDataFormat.TEXT;				urlLoader.addEventListener(Event.COMPLETE, onLoaded);				urlLoader.addEventListener(IOErrorEvent.IO_ERROR, ifFailed);				urlLoader.load(urlRequest);		}				private function onLoaded(e:Event):void {			if (urlLoader.data.search("Success") == -1) {				trace(urlLoader.data);				_response = "Invalid Email Address!";			} else {				_response = "Thank You!";			}			dispatchEvent(new Event(ON_FINISHED));		}				private function ifFailed(e:IOErrorEvent):void {			trace("Campaign Monitor Server Not Responding!");		}				public function get result():String {			return _response;		}			}}